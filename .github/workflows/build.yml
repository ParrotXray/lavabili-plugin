name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Generate build report
      if: always()
      run: ./gradlew build --scan

    - name: Get artifact name
      if: github.event_name == 'release'
      id: get_artifact_name
      run: |
        MAIN_JAR=$(find build/libs/ -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar" | head -1 | xargs basename -s .jar)
        if [ -z "$MAIN_JAR" ]; then
          MAIN_JAR=$(find build/libs/ -name "*.jar" | head -1 | xargs basename -s .jar)
        fi
        echo "artifact_name=$MAIN_JAR" >> $GITHUB_OUTPUT
        echo "Found artifact name: $MAIN_JAR"
    
    - name: Upload build artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get_artifact_name.outputs.artifact_name }}
        path: build/libs/*.jar
    
    - name: Upload Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          build/libs/*.jar
          build/libs/*.war
        token: ${{ secrets.GITHUB_TOKEN }}